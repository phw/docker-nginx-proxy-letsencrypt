version: '2'

services:

  # nginx for automatic load balancing of all containers
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/conf.d
      - /usr/share/nginx/html
      - ./data/certs:/etc/nginx/certs:ro
      - ./config/nginx/custom.conf:/etc/nginx/conf.d/custom.conf:ro
      - ./config/nginx/vhost.d:/etc/nginx/vhost.d
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    networks:
      - proxy-tier

  nginx-gen:
    image: jwilder/docker-gen
    container_name: nginx-gen
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    volumes_from:
      - nginx
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen
    environment:
      - ENABLE_IPV6=true
    # Workaround for https://github.com/jwilder/docker-gen/issues/201
    entrypoint: /bin/sh -c
    command: ["/usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf"]
    networks:
      - proxy-tier

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    restart: always
    volumes_from:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/certs:/etc/nginx/certs:rw
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
    networks:
      - proxy-tier

networks:
  proxy-tier:
    external:
      name: nginx-proxy
